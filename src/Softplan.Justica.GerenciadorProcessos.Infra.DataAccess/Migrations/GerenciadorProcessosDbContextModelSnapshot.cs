// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Softplan.Justica.GerenciadorProcessos.Infra.DataAccess.Context;

namespace Softplan.Justica.GerenciadorProcessos.Infra.DataAccess.Migrations
{
    [DbContext(typeof(GerenciadorProcessosDbContext))]
    partial class GerenciadorProcessosDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Softplan.Justica.GerenciadorProcessos.Domain.Models.Processo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("DataDistribuicao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(1000) CHARACTER SET utf8mb4")
                        .HasMaxLength(1000);

                    b.Property<string>("NumeroProcesso")
                        .IsRequired()
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.Property<string>("PastaFisicaCliente")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int?>("ProcessoVinculadoId")
                        .HasColumnType("int");

                    b.Property<bool>("SegredoJustica")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("SituacaoId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NumeroProcesso")
                        .IsUnique();

                    b.HasIndex("ProcessoVinculadoId");

                    b.HasIndex("SituacaoId");

                    b.ToTable("Processo");
                });

            modelBuilder.Entity("Softplan.Justica.GerenciadorProcessos.Domain.Models.ProcessoResponsavel", b =>
                {
                    b.Property<int>("ProcessoId")
                        .HasColumnType("int");

                    b.Property<int>("ResponsavelId")
                        .HasColumnType("int");

                    b.HasKey("ProcessoId", "ResponsavelId");

                    b.HasIndex("ResponsavelId");

                    b.ToTable("ProcessoResponsavel");
                });

            modelBuilder.Entity("Softplan.Justica.GerenciadorProcessos.Domain.Models.Responsavel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("varchar(11) CHARACTER SET utf8mb4")
                        .HasMaxLength(11);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(400) CHARACTER SET utf8mb4")
                        .HasMaxLength(400);

                    b.Property<byte[]>("Foto")
                        .HasColumnType("longblob");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(150) CHARACTER SET utf8mb4")
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.HasIndex("Cpf")
                        .IsUnique();

                    b.ToTable("Responsavel");
                });

            modelBuilder.Entity("Softplan.Justica.GerenciadorProcessos.Domain.Models.SituacaoProcesso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Finalizado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("SituacaoProcesso");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Finalizado = false,
                            Nome = "Em Andamento"
                        },
                        new
                        {
                            Id = 2,
                            Finalizado = false,
                            Nome = "Desmembrado"
                        },
                        new
                        {
                            Id = 3,
                            Finalizado = false,
                            Nome = "Em Recurso"
                        },
                        new
                        {
                            Id = 4,
                            Finalizado = true,
                            Nome = "Finalizado"
                        },
                        new
                        {
                            Id = 5,
                            Finalizado = true,
                            Nome = "Arquivado"
                        });
                });

            modelBuilder.Entity("Softplan.Justica.GerenciadorProcessos.Domain.Models.Processo", b =>
                {
                    b.HasOne("Softplan.Justica.GerenciadorProcessos.Domain.Models.Processo", "ProcessoVinculado")
                        .WithMany()
                        .HasForeignKey("ProcessoVinculadoId");

                    b.HasOne("Softplan.Justica.GerenciadorProcessos.Domain.Models.SituacaoProcesso", "Situacao")
                        .WithMany("Processos")
                        .HasForeignKey("SituacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Softplan.Justica.GerenciadorProcessos.Domain.Models.ProcessoResponsavel", b =>
                {
                    b.HasOne("Softplan.Justica.GerenciadorProcessos.Domain.Models.Processo", "Processo")
                        .WithMany("ProcessoResponsaveis")
                        .HasForeignKey("ProcessoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Softplan.Justica.GerenciadorProcessos.Domain.Models.Responsavel", "Responsavel")
                        .WithMany("ProcessoResponsaveis")
                        .HasForeignKey("ResponsavelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
